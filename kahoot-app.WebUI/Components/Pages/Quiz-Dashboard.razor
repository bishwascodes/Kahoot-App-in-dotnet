@page "/quiz-dashboard"
@inject NavigationManager NavigationManager

<PageTitle>Quiz Dashboard</PageTitle>

<h1>Welcome to Quiz Management Dashboard</h1>
<div class="mt-5 p-2 mb-6">
    <h3>Hello @quiz.Admin.Name ! Your're Managing the quiz.</h3>
    <h4>Your Quiz is : <em> @quiz.QuizName </em></h4>
</div>

<div class="row mt-4 p-2">
<h5> Current Participants: <em>(@playerList.Count)</em></h5>
   @foreach (var player in playerList)
{
    <div class="col-3 text-center">
         <div class="card p-4"> @player.Name </div>
    </div>
} 
</div>
<div class="d-flex justify-content-end">
    <div style="margin-right: 100px;">
         <button class="btn btn-primary mt-4" @onclick="StartQuiz">Start Quiz Now</button>
    </div>
   
</div>
@code {

    [SupplyParameterFromQuery]
    public int? QuizId { get; set; }
    bool adminAdded = false;

    string adminName;
    Questions? quizQuestions;
    List<Player> playerList = new();

    Quiz? quiz
    {
        get
        {
            if (QuizId is null)
                return null;

            try
            {
                return QuizHost.Instance.Quizzes[QuizId.Value - 1];
            }
            catch
            {
                NavigationManager.NavigateTo("/");
            }
            return null;
        }

    }

    void StartQuiz(){
        quiz.Start();
    }
    protected override void OnInitialized()
    {
        quiz.getQuestions();
        quizQuestions = quiz.Questions;

        quiz.QuizStateChanged += () => InvokeAsync(StateHasChanged);


    }
    protected override void OnParametersSet()
    {
        quiz.QuizStateChanged += () =>
        {
            InvokeAsync(() =>
            {
                playerList = quiz.Players;
                StateHasChanged();
            });
        };


    }

}
