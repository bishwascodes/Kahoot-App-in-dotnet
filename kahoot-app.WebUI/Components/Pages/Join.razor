@page "/join"
@inject NavigationManager NavigationManager

<PageTitle>Join</PageTitle>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link
    href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    rel="stylesheet">
<style>
     body {
        font-family: "Poppins", sans-serif;
    }
    .main-container{
        height: 80vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    input{
        padding: 0.5rem;
        padding-left: 3rem;
        padding-right: 3rem;
        border-radius:8px;
    }
</style>
<div class="main-container">

<h1>You're one step closer to play the quiz</h1>

@if (quiz is null)
{
    <p>What? Are you missing the quizid query string parameter?</p>
}
else if (quiz.PlayersCanJoin)
{
    <form class="p-4" @onsubmit=joinQuiz>
        <input required @bind=newPlayerName placeholder="Your Name" />
        <input class="btn btn-primary" type=submit value='Join Quiz' />
    </form>
}
else
{
    <p>Sorry, looks like the entry for the participation in the quiz is already closed.</p>
    
}
</div>
@code {

    [SupplyParameterFromQuery]
    public int? QuizId { get; set; }

    string newPlayerName;

    Quiz? quiz
    {
        get
        {
            if (QuizId is null)
                return null;

            try
            {
                return QuizHost.Instance.Quizzes[QuizId.Value-1];
            }
            catch
            {
                NavigationManager.NavigateTo("/");
            }
            return null;
        }
    }

    protected override void OnInitialized()
    {
        quiz.QuizStateChanged += () => InvokeAsync(StateHasChanged);
        QuizHost.Instance.HostStateChanged += () => InvokeAsync(StateHasChanged);
    }
    
    void joinQuiz()
    {
        int newPlayerid = quiz.Join(newPlayerName);
        QuizHost.Instance.RaiseHostStateChanged();
        NavigationManager.NavigateTo($"/quiz-play?PlayerId={newPlayerid}&quizid={QuizId}");
    }
}